rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for specific user documents and their todos subcollection
    match /users/{userId} {
      // User document rules
      // Allow any authenticated user to read user documents (assuming public info)
      allow read: if isAuthenticated();
      // Allow only the owner to write their own document
      allow write: if isOwner(userId);

      // Todos subcollection rules (for direct access)
      match /todos/{todoId} {
        // Allow read/update if owner OR if uid is directly in the resource's sharedWith array
        allow read, update: if isAuthenticated() && (
                               isOwner(userId) || 
                               (resource.data.sharedWith != null && request.auth.uid in resource.data.sharedWith)
                             );
        // Create/delete only allowed for the owner
        allow create, delete: if isOwner(userId);
      }
    }

    // --- RULE FOR 'todos' COLLECTION GROUP QUERY (Shared With) ---
    match /{path=**}/todos/{todoId} {
       allow read: if isAuthenticated() && (
                       request.auth.uid == path[1] || 
                       (resource.data.sharedWith != null && request.auth.uid in resource.data.sharedWith)
                    );
    }

    // --- RULE FOR 'todos' COLLECTION GROUP QUERY (Mentions) ---
    // This allows the collectionGroup query used in MentionsList.
    match /{path=**}/todos/{todoId} {
       // Allow reading documents from the collection group query IF:
       // 1. User is authenticated AND
       // 2. The user's UID is present in the document's mentionedUsers array.
       allow read: if isAuthenticated() && 
                      (resource.data.mentionedUsers != null && request.auth.uid in resource.data.mentionedUsers);
        // Note: We could combine this rule with the one above, but separate can be clearer.
        // Combined would be: 
        // allow read: if isAuthenticated() && (
        //                 request.auth.uid == path[1] || 
        //                 (resource.data.sharedWith != null && request.auth.uid in resource.data.sharedWith) ||
        //                 (resource.data.mentionedUsers != null && request.auth.uid in resource.data.mentionedUsers)
        //              );
    }
  }
} 